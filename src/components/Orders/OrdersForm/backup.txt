import { useState } from "react";
import "./OrdersForm.css";
import axios from "axios"; // Import Axios for making HTTP requests

const OrdersForm = () => {
  const [formData, setFormData] = useState({
    orderId: "",
    customerName: "",
    pigId: "",
    totalWeight: "",
    address: "",
    advance: "",
    finalPayment: "",
    phoneNumber: "",
    comment: "",
    deliveryDate: "",
    deliveryStatus: "",
  });
  //handleChange logic
  const handleChange = (e) => {
    const { id, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [id]: value,
    }));
  };

  //handle the option data value separately
  //   const handleGenderChange = (e) => {
  //     setFormData((prevData) => ({
  //       ...prevData,
  //       gender: e.target.value, // Update gender state when selection changes
  //     }));
  //   };
  // submission form logic
  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      // Make an HTTP POST request to your backend endpoint
      const response = await axios.post(
        "http://localhost:3000/submit-form-order",
        formData
      );

      // Handle the response if needed
      console.log(response.data);

      // Reset the form data after successful submission
      setFormData({
        orderId: "",
        customerName: "",
        pigId: "",
        totalWeight: "",
        address: "",
        advance: "",
        finalPayment: "",
        phoneNumber: "",
        comment: "",
        deliveryDate: "",
        deliveryStatus: "",
      });
      alert("Data added successfully");
    } catch (error) {
      // Handle error if the request fails
      console.error("Error occurred:", error);
    }
  };
  return (
    <>
      <div className="orders-entry-form">
        <div className="orders-entry-form-2nd">
          <h4 style={{ textAlign: "center", color: "rgb(115, 115, 243)" }}>
            Enter new Order
          </h4>
          {/* <form onSubmit={handleSubmit}> */}
          <form>

            <div className="mb-3 content-div">
              <label className="form-label">Order Id</label>
              <input
                required
                type="text"
                className="form-control"
                id="orderId"
                placeholder="Enter order id"
                value={formData.id}
                onChange={handleChange}
              ></input>
              <label className="form-label">Customer Name</label>
              <input
                type="text"
                className="form-control"
                id="customerName"
                placeholder="Enter customer name"
                value={formData.customerName}
                onChange={handleChange}
              ></input>
              <label className="form-label">Pig Id</label>
              <input
                type="text"
                className="form-control"
                placeholder="Search for pig id"
                id="pigId"
                value={formData.pigId}
                onChange={handleChange}

              ></input>
             

              <label className="form-label">Total weight</label>
              <input
                type="number"
                className="form-control"
                placeholder="Total weight"
                id="totalWeight"
                value={formData.totalWeight}
                onChange={handleChange}
              />
              <label className="form-label">Address</label>
              <input
                type="text"
                className="form-control"
                placeholder="Enter the address"
                id="address"
                value={formData.address}
                onChange={handleChange}
              />
              <label className="form-label">Advance</label>
              <input
                type="number"
                className="form-control"
                placeholder="in rupees"
                id="advance"
                value={formData.advance}
                onChange={handleChange}
              />
              <label className="form-label">Final payment</label>
              <input
                type="number"
                className="form-control"
                placeholder="in rupees"
                id="finalPayment"
                value={formData.finalPayment}
                onChange={handleChange}
              />
              <label className="form-label">Phone Number</label>
              <input
                type="number"
                className="form-control"
                placeholder="Enter the phone number"
                id="phoneNumber"
                value={formData.phoneNumber}
                onChange={handleChange}
              />
              <label className="form-label">Comment</label>
              <input
                type="text"
                className="form-control"
                placeholder="Type comment"
                id="comment"
                value={formData.comment}
                onChange={handleChange}
              />
              <label className="form-label">Delivery date</label>
              <input
                type="date"
                className="form-control"
                id="deliveryDate"
                value={formData.deliveryDate}
                onChange={handleChange}
              />
              <label className="form-label">Delivery Status</label>
              <select name="" id="deliveryStatus">
                <option selected>Select from the list</option>
                <option value="pending">pending</option>
                <option value="delivered">delivered</option>
              </select>

              <input
                onClick={handleSubmit}
                type="submit"
                className="btn btn-primary submit-btn"
                value="Submit"
              />
            </div>
          </form>
        </div>
      </div>
    </>
  );
};

export default OrdersForm;

// 2nd -----------------------------------------------------


import React, { useState, useEffect } from "react";
import axios from "axios";
import AsyncSelect from "react-select/async";
import "./OrdersForm.css";

const OrdersForm = () => {
  const [formData, setFormData] = useState({
    orderId: "",
    customerName: "",
    pigIds: [],
    totalWeight: "",
    address: "",
    advance: "",
    finalPayment: "",
    phoneNumber: "",
    comment: "",
    deliveryDate: "",
    deliveryStatus: "",
  });

  const [pigOptions, setPigOptions] = useState([]);

  useEffect(() => {
    const fetchPigOptions = async () => {
      try {
        const response = await axios.get("http://localhost:3000/boar-details");
        const options = response.data.map((pig) => ({
          value: pig.id,
          label: `Pig ${pig.id}`,
        }));
        setPigOptions(options);
        console.log(options)
      } catch (error) {
        console.error("Error fetching pig options:", error);
      }
    };

    fetchPigOptions();
  }, []);

  const handleChange = (e) => {
    const { id, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [id]: value,
    }));
  };

  const handlePigIdChange = (selectedOptions) => {
    const selectedPigIds = selectedOptions.map((option) => option.value);
    setFormData((prevData) => ({
      ...prevData,
      pigIds: selectedPigIds,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await axios.post(
        "http://localhost:3000/submit-form-order",
        formData
      );

      console.log("Form submitted successfully:", response.data);

      // Reset form data after successful submission
      setFormData({
        orderId: "",
        customerName: "",
        pigIds: [],
        totalWeight: "",
        address: "",
        advance: "",
        finalPayment: "",
        phoneNumber: "",
        comment: "",
        deliveryDate: "",
        deliveryStatus: "",
      });

      alert("Order submitted successfully!");
    } catch (error) {
      console.error("Error submitting form:", error);
      alert("Failed to submit order. Please try again.");
    }
  };

  return (
    <div className="orders-entry-form">
      <div className="orders-entry-form-2nd">
        <h4 style={{ textAlign: "center", color: "rgb(115, 115, 243)" }}>
          Enter new Order
        </h4>
        <form onSubmit={handleSubmit}>
          <div className="mb-3 content-div">
            <label className="form-label">Order Id</label>
            <input
              required
              type="text"
              className="form-control"
              id="orderId"
              placeholder="Enter order id"
              value={formData.orderId}
              onChange={handleChange}
            />

            <label className="form-label">Customer Name</label>
            <input
              type="text"
              className="form-control"
              id="customerName"
              placeholder="Enter customer name"
              value={formData.customerName}
              onChange={handleChange}
            />

            <label className="form-label">Pig Id</label>
            <AsyncSelect
              isMulti
              isSearchable
              placeholder="Search and select pig IDs"
              options={pigOptions}
              onChange={handlePigIdChange}
            />

            <label className="form-label">Total weight</label>
            <input
              type="number"
              className="form-control"
              id="totalWeight"
              placeholder="Total weight"
              value={formData.totalWeight}
              onChange={handleChange}
            />

            <label className="form-label">Address</label>
            <input
              type="text"
              className="form-control"
              id="address"
              placeholder="Enter the address"
              value={formData.address}
              onChange={handleChange}
            />

            <label className="form-label">Advance</label>
            <input
              type="number"
              className="form-control"
              id="advance"
              placeholder="in rupees"
              value={formData.advance}
              onChange={handleChange}
            />

            <label className="form-label">Final payment</label>
            <input
              type="number"
              className="form-control"
              id="finalPayment"
              placeholder="in rupees"
              value={formData.finalPayment}
              onChange={handleChange}
            />

            <label className="form-label">Phone Number</label>
            <input
              type="number"
              className="form-control"
              id="phoneNumber"
              placeholder="Enter the phone number"
              value={formData.phoneNumber}
              onChange={handleChange}
            />

            <label className="form-label">Comment</label>
            <input
              type="text"
              className="form-control"
              id="comment"
              placeholder="Type comment"
              value={formData.comment}
              onChange={handleChange}
            />

            <label className="form-label">Delivery date</label>
            <input
              type="date"
              className="form-control"
              id="deliveryDate"
              value={formData.deliveryDate}
              onChange={handleChange}
            />

            <label className="form-label">Delivery Status</label>
            <select
              className="form-control"
              id="deliveryStatus"
              value={formData.deliveryStatus}
              onChange={handleChange}
            >
              <option value="" disabled>
                Select from the list
              </option>
              <option value="pending">Pending</option>
              <option value="delivered">Delivered</option>
            </select>

            <input
              type="submit"
              className="btn btn-primary submit-btn"
              value="Submit"
            />
          </div>
        </form>
      </div>
    </div>
  );
};

export default OrdersForm;
